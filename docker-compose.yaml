version: '3.8'
services:

  mongodb:
    image: mongo:latest # use the latest image.
    container_name: mongodb
    restart: unless-stopped
    environment: # set required env variables to access mongo
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: rest-api
    ports:
      - 27017:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro  
    # volumes: # optional to preserve database after container is deleted.
    #   - ./database-data:/data/db
  
  # Mongo Express Service
  mongo-express:
    image: mongo-express:latest # latest image
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongodb 
      # use the name of the mongo container above for server env var.
      # In our case this is mongodb
      
  rest-api:
    container_name: rest-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    build:
        context: ./ 
    ports:
      - 1337:1337
    links:
      - mongodb   

  caddy:
    image: caddy/caddy:2.2.1-alpine
    container_name: caddy-service
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
    - $PWD/Caddyfile:/etc/caddy/Caddyfile
    - $PWD/site:/srv
    - caddy_data:/data
    - caddy_config:/config

volumes:
  caddy_data:
  caddy_config:     

networks:
  default: 
    name: mongodb_network

